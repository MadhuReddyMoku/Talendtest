package routines;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Dlp_Dateformats {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static void helloExample(String message) {
        if (message == null) {
            message = "World"; //$NON-NLS-1$
        }
        System.out.println("Hello " + message + " !"); //$NON-NLS-1$ //$NON-NLS-2$
    }
    
    public static Date returnDate(String date){
    	if (date == null){
    		return null;
    	}
    	
    	Date d = new Date();
		d.setTime(Long.parseLong(date));
    	
		return d;
    }
    
    public static Date stringToTimestamp(String inputdate) throws ParseException {
		Date date = new Date();
		if(inputdate == null)
		{
			date = new Date();

		}else{
			//SimpleDateFormat d = new SimpleDateFormat("yyyyMMddHHmmss");
			
		long currentdate=Long.parseLong(inputdate);
			Date d = new Date(currentdate);
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

			String  currentdateinString= dateFormat.format(d); 
			Timestamp ts = Timestamp.valueOf(currentdateinString);
			//date =dateFormat.format(currentdateinString);
			date= ts;
			
			
		}
		
		return date;
	}
    
}
